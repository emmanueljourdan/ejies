/*	ej.cycle.js by Emmanuel Jourdan, Ircam - 02 2004	send any type of data to the next outlet */// global codevar ejies = EjiesUtils();	// lien vers ejies-extension.jsvar CopyRight = new Global("EjiesCopyRight");	// variable globale utilisŽe pour le copyrightvar NbOutlets = 1;const MAXINOUT = 64;	// nombre maximum de sortiesvar WhichOutlet = 0; 	// sur quelle outlet on envoie les informations...var SignalWarning = 1;	// pour afficher un message d'erreur quand il y a du signal qui arrive// traitement des argumentsif (jsarguments.length>1 && typeof jsarguments[1] == "number")	NbOutlets = Math.min(jsarguments[1],MAXINOUT);	// outlet (minimum 1, max 64)if (jsarguments.length>2)	post("¥ error: ej.cycle.js extra arguments\n");inlets = 1;outlets = NbOutlets;// assistancesetinletassist(0, "Data to send to successive outlets");for ( i=0 ; i < NbOutlets ; i++) { setoutletassist(i,"outlet " + (i+1)); }function loadbang(){	if ( ! CopyRight["cycle"]) {		post("ej.cycle.js: version", ejies.VersNum, ejies.VersDate);		post("\n     by Emmanuel Jourdan\, Ircam\n");		CopyRight["cycle"] = 1 ;	}	}function set(v){	if (typeof v == "number")		WhichOutlet = ejies.clip(v,1, NbOutlets) - 1; // depuis l'extŽrieur il s'agit des entrŽes 1 ˆ NbOutlets	else		post("¥ error: ej.cycle.js wrong argument for message set.\n");}function signal(){	if (SignalWarning)		post("¥ error: ej.cycle.js doesn't work with signal\n");	SignalWarning = 0;}function anything(){	outlet((WhichOutlet++ % NbOutlets), arrayfromargs(messagename, arguments));}// Pour la compilation automatique// autowatch = 1;// post("Compiled...\n");